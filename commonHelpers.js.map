{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\"use strict\"; \n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startButton = document.querySelector('button');\nconst input = document.querySelector('#datetime-picker');\n\nlet userSelectedDate;\n\nstartButton.disabled = true;\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose: function (selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate > currentDate) {\n      startButton.disabled = false;\n    } else {\n      startButton.disabled = true;\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future!',\n        position: 'topRight',\n        backgroundColor: '#ef4040',\n        messageColor: '#fff',\n        titleColor: '#fff',\n      });\n    }\n  },\n});\n\nstartButton.addEventListener('click', () => {\n  if (startButton.disabled === false) {\n    setInterval(updateDisplay, 1000);\n    startButton.disabled = true;\n    input.disabled = true;\n  }\n});\n\nfunction updateDisplay() {\n  const currentDate = new Date();\n  const remainingTime = userSelectedDate - currentDate;\n\n  if (remainingTime <= 0) {\n    clearInterval(updateCounter);\n    return;\n  }\n  const { days, hours, minutes, seconds } = convertMs(remainingTime);\n  const addTimerValue = (value) => String(value).padStart(2, '0');\n\n  document.querySelector('[data-days]').textContent = addTimerValue(days);\n  document.querySelector('[data-hours]').textContent = addTimerValue(hours);\n  document.querySelector('[data-minutes]').textContent = addTimerValue(minutes);\n  document.querySelector('[data-seconds]').textContent = addTimerValue(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["startButton","input","userSelectedDate","flatpickr","selectedDates","iziToast","updateDisplay","remainingTime","days","hours","minutes","seconds","convertMs","addTimerValue","value","ms"],"mappings":"2GAOA,MAAMA,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAQ,SAAS,cAAc,kBAAkB,EAEvD,IAAIC,EAEJF,EAAY,SAAW,GAEvBG,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAS,SAAUC,EAAe,CAChCF,EAAmBE,EAAc,CAAC,EAE9BF,EADgB,IAAI,KAEtBF,EAAY,SAAW,IAEvBA,EAAY,SAAW,GACvBK,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,sCACT,SAAU,WACV,gBAAiB,UACjB,aAAc,OACd,WAAY,MACpB,CAAO,EAEJ,CACH,CAAC,EAEDL,EAAY,iBAAiB,QAAS,IAAM,CACtCA,EAAY,WAAa,KAC3B,YAAYM,EAAe,GAAI,EAC/BN,EAAY,SAAW,GACvBC,EAAM,SAAW,GAErB,CAAC,EAED,SAASK,GAAgB,CAEvB,MAAMC,EAAgBL,EADF,IAAI,KAGxB,GAAIK,GAAiB,EAAG,CACtB,cAAc,aAAa,EAC3B,MACD,CACD,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EAC3DM,EAAiBC,GAAU,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAE9D,SAAS,cAAc,aAAa,EAAE,YAAcD,EAAcL,CAAI,EACtE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAcJ,CAAK,EACxE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAcH,CAAO,EAC5E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAcF,CAAO,CAC9E,CAEA,SAASC,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}